package interfaces;

import clase_base_datos.Conexion_sql;
import funcionabilidad.ValidacionesGenerales;
import funcionabilidad.ValidacionesIndividual;
import static interfaces.Crear_usuario.tipo;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Modificar_usuarios extends javax.swing.JFrame {

    //Variables para obtener posicion(x,y) de la ventana en la pantalla
    int mouseX, mouseY;

    String IDusuario = "";

    public Modificar_usuarios() {

        IDusuario = Listar_Usuarios.IDusuario_update;

        initComponents();
        setTitle("Modificar Usuarios");
        setSize(500, 770);
        setLocationRelativeTo(null);
        setResizable(false);

        if (IDusuario.equals("")) {

        } else {
            try {
                Connection cn = Conexion_sql.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "SELECT `cedula`, `nombre`, `apellido`, `nombre_usuario`,"
                        + " `contraseña`, `permiso`, `estado`"
                        + " FROM `bd_porcinos`.`usuarios_sistema`WHERE nombre_usuario='" + IDusuario + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    System.out.println(IDusuario);

                    String cedula = rs.getString("cedula");
                    String nombre = rs.getString("nombre");
                    String apellido = rs.getString("apellido");
                    String nombreUsuario = rs.getString("nombre_usuario");
                    String contraseña = rs.getString("contraseña");
                    String tipo_usuario = (String) rs.getString("permiso");
                    String estado_usuario = rs.getString("estado");

                    txt_buscar.setSelectedItem(cedula);
                    txt_nombre.setText(nombre);
                    txt_apellido.setText(apellido);
                    txt_usuario.setText(nombreUsuario);
                    txt_contraseña.setText(contraseña);
                    cmb_tipo_usuario.setSelectedItem(tipo_usuario);
                    cmb_estado_usuario.setSelectedItem(estado_usuario);

                } else {
                    JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");

                }
                cn.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }
        }

        try {
            Connection cn = Conexion_sql.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT nombre_usuario FROM `usuarios_sistema`");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                txt_buscar.addItem(rs.getString("nombre_usuario"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        p_modificar_usuario_b_actualizar = new prueba_diseño.PanelRound();
        b_usuario_actualizar = new javax.swing.JLabel();
        i_usuario_actualizar = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JComboBox<>();
        panelRound8 = new prueba_diseño.PanelRound();
        panelRound9 = new prueba_diseño.PanelRound();
        salir = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmb_estado_usuario = new javax.swing.JComboBox<>();
        p_modificar_usuario_b_eliminar = new prueba_diseño.PanelRound();
        b_eliminar = new javax.swing.JLabel();
        icon_eliminar_modificar = new javax.swing.JLabel();
        barra_mover4 = new javax.swing.JLabel();
        p_rgistro_usuario_nombre_usuario = new prueba_diseño.PanelRound();
        txt_usuario = new javax.swing.JTextField();
        p_rgistro_usuario_contraseña = new prueba_diseño.PanelRound();
        txt_contraseña = new javax.swing.JPasswordField();
        p_rgistro_usuario_nombre = new prueba_diseño.PanelRound();
        txt_nombre = new javax.swing.JTextField();
        p_rgistro_usuario_confirmar_conraseña = new prueba_diseño.PanelRound();
        txt_confirmar_contraseña = new javax.swing.JPasswordField();
        p_rgistro_usuario_apellio = new prueba_diseño.PanelRound();
        txt_apellido = new javax.swing.JTextField();
        cmb_tipo_usuario = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(36, 22, 74));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        p_modificar_usuario_b_actualizar.setBackground(new java.awt.Color(0, 102, 102));
        p_modificar_usuario_b_actualizar.setRoundBottomLeft(50);
        p_modificar_usuario_b_actualizar.setRoundBottomRight(50);
        p_modificar_usuario_b_actualizar.setRoundTopLeft(50);
        p_modificar_usuario_b_actualizar.setRoundTopRight(50);
        p_modificar_usuario_b_actualizar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b_usuario_actualizar.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        b_usuario_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        b_usuario_actualizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_usuario_actualizar.setText("Actualizar");
        b_usuario_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_usuario_actualizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_usuario_actualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_usuario_actualizarMouseExited(evt);
            }
        });
        p_modificar_usuario_b_actualizar.add(b_usuario_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));

        i_usuario_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar (2).png"))); // NOI18N
        p_modificar_usuario_b_actualizar.add(i_usuario_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 30, 30));

        jPanel1.add(p_modificar_usuario_b_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 650, 180, 50));

        txt_buscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------" }));
        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        jPanel1.add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 120, 40));

        panelRound8.setBackground(new java.awt.Color(0, 102, 102));
        panelRound8.setRoundBottomLeft(50);
        panelRound8.setRoundBottomRight(50);
        panelRound8.setRoundTopLeft(50);
        panelRound8.setRoundTopRight(50);
        panelRound8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound9.setBackground(new java.awt.Color(0, 102, 102));
        panelRound9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_login/tarjeta-de-direccion (1).png"))); // NOI18N
        salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMouseClicked(evt);
            }
        });
        panelRound9.add(salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

        panelRound8.add(panelRound9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 70, 60));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_menuA/cerdo.png"))); // NOI18N
        panelRound8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 90, 90));

        jLabel2.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Modificar Usuario");
        panelRound8.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 220, 70));

        jPanel1.add(panelRound8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 480, 80));

        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tipos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 140, -1));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 80, -1));

        jLabel5.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contraseña");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 160, -1));

        jLabel6.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Apellido");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, 80, -1));

        jLabel7.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Confirmar Contraseña");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, 190, -1));

        jLabel8.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Buscar");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 80, -1));

        jLabel9.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nombre de Usuario");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 160, -1));

        jLabel11.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Estado");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 170, -1));

        cmb_estado_usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        cmb_estado_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_estado_usuarioActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_estado_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 120, 40));

        p_modificar_usuario_b_eliminar.setBackground(new java.awt.Color(0, 102, 102));
        p_modificar_usuario_b_eliminar.setRoundBottomLeft(50);
        p_modificar_usuario_b_eliminar.setRoundBottomRight(50);
        p_modificar_usuario_b_eliminar.setRoundTopLeft(50);
        p_modificar_usuario_b_eliminar.setRoundTopRight(50);
        p_modificar_usuario_b_eliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b_eliminar.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        b_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        b_eliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_eliminar.setText("Eliminar");
        b_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_eliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_eliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_eliminarMouseExited(evt);
            }
        });
        p_modificar_usuario_b_eliminar.add(b_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));

        icon_eliminar_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_menu_usuario/basura (1).png"))); // NOI18N
        p_modificar_usuario_b_eliminar.add(icon_eliminar_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 10, 30, 30));

        jPanel1.add(p_modificar_usuario_b_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 650, 180, 50));

        barra_mover4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barra_mover4MouseDragged(evt);
            }
        });
        barra_mover4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barra_mover4MousePressed(evt);
            }
        });
        jPanel1.add(barra_mover4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 20));

        p_rgistro_usuario_nombre_usuario.setRoundBottomLeft(50);
        p_rgistro_usuario_nombre_usuario.setRoundBottomRight(50);
        p_rgistro_usuario_nombre_usuario.setRoundTopLeft(50);
        p_rgistro_usuario_nombre_usuario.setRoundTopRight(50);
        p_rgistro_usuario_nombre_usuario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_usuario.setBackground(new java.awt.Color(218, 215, 220));
        txt_usuario.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txt_usuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_usuario.setBorder(null);
        p_rgistro_usuario_nombre_usuario.add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 40));

        jPanel1.add(p_rgistro_usuario_nombre_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 180, 50));

        p_rgistro_usuario_contraseña.setRoundBottomLeft(50);
        p_rgistro_usuario_contraseña.setRoundBottomRight(50);
        p_rgistro_usuario_contraseña.setRoundTopLeft(50);
        p_rgistro_usuario_contraseña.setRoundTopRight(50);
        p_rgistro_usuario_contraseña.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_contraseña.setBackground(new java.awt.Color(218, 215, 220));
        txt_contraseña.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_contraseña.setBorder(null);
        txt_contraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_contraseñaActionPerformed(evt);
            }
        });
        p_rgistro_usuario_contraseña.add(txt_contraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 40));

        jPanel1.add(p_rgistro_usuario_contraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 180, 50));

        p_rgistro_usuario_nombre.setRoundBottomLeft(50);
        p_rgistro_usuario_nombre.setRoundBottomRight(50);
        p_rgistro_usuario_nombre.setRoundTopLeft(50);
        p_rgistro_usuario_nombre.setRoundTopRight(50);
        p_rgistro_usuario_nombre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nombre.setBackground(new java.awt.Color(218, 215, 220));
        txt_nombre.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(null);
        p_rgistro_usuario_nombre.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 40));

        jPanel1.add(p_rgistro_usuario_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 180, 50));

        p_rgistro_usuario_confirmar_conraseña.setRoundBottomLeft(50);
        p_rgistro_usuario_confirmar_conraseña.setRoundBottomRight(50);
        p_rgistro_usuario_confirmar_conraseña.setRoundTopLeft(50);
        p_rgistro_usuario_confirmar_conraseña.setRoundTopRight(50);
        p_rgistro_usuario_confirmar_conraseña.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_confirmar_contraseña.setBackground(new java.awt.Color(218, 215, 220));
        txt_confirmar_contraseña.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_confirmar_contraseña.setBorder(null);
        txt_confirmar_contraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_confirmar_contraseñaActionPerformed(evt);
            }
        });
        p_rgistro_usuario_confirmar_conraseña.add(txt_confirmar_contraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 40));

        jPanel1.add(p_rgistro_usuario_confirmar_conraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 520, 180, 50));

        p_rgistro_usuario_apellio.setRoundBottomLeft(50);
        p_rgistro_usuario_apellio.setRoundBottomRight(50);
        p_rgistro_usuario_apellio.setRoundTopLeft(50);
        p_rgistro_usuario_apellio.setRoundTopRight(50);
        p_rgistro_usuario_apellio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_apellido.setBackground(new java.awt.Color(218, 215, 220));
        txt_apellido.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txt_apellido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_apellido.setBorder(null);
        p_rgistro_usuario_apellio.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 160, 40));

        jPanel1.add(p_rgistro_usuario_apellio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, 180, 50));

        cmb_tipo_usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Tecnico" }));
        jPanel1.add(cmb_tipo_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 120, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_estado_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_estado_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_estado_usuarioActionPerformed

    private void salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMouseClicked
        //Boton
        //Salir de la interface
        if (tipo.equals("Administrador")) {
            dispose();
            Administrador menu = new Administrador();
            menu.setVisible(true);

        } else if (tipo.equals("Tecnico")) {
            dispose();
            Tecnico menu = new Tecnico();
            menu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Error del servidor");
        }
    }//GEN-LAST:event_salirMouseClicked

    private void barra_mover4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MouseDragged
        //Obtener posicion x,y de la interfaz al arrastrar con el mouse
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //Posicionar la ventana segun los valores obtenidos
        this.setLocation(x - mouseX, y - mouseY);
    }//GEN-LAST:event_barra_mover4MouseDragged

    private void barra_mover4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MousePressed
        //Obtener posiciones x,y del mouse cuando se mantiene presionado
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_barra_mover4MousePressed

    private void b_eliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseEntered
        // Cambiar el color al hacer focus en el boton "ELIMINAR", del modulo
        //"MODIFICAR USUARIO"
        p_modificar_usuario_b_eliminar.setBackground(new Color(164, 48, 48));
    }//GEN-LAST:event_b_eliminarMouseEntered

    private void b_eliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseExited
        // volver al color original, al no tener el focus en el boton "ELIMINAR", del modulo
        //"MODIFICAR USUARIO"
        p_modificar_usuario_b_eliminar.setBackground(new Color(0, 102, 99));
    }//GEN-LAST:event_b_eliminarMouseExited

    private void b_usuario_actualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_usuario_actualizarMouseEntered
        // Cambiar el color al hacer focus en el boton "ACTUALIZAR", del modulo
        //"MODIFICAR USUARIO"
        p_modificar_usuario_b_actualizar.setBackground(new Color(2, 86, 105));
    }//GEN-LAST:event_b_usuario_actualizarMouseEntered

    private void b_usuario_actualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_usuario_actualizarMouseExited
        // volver al color original, al no tener el focus en el boton "Actualizar", del modulo
        //"MODIFICAR USUARIO"
        p_modificar_usuario_b_actualizar.setBackground(new Color(0, 102, 99));
    }//GEN-LAST:event_b_usuario_actualizarMouseExited

    private void b_usuario_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_usuario_actualizarMouseClicked
        //Modificacion Usuario y guardar en la base de datos

        //Llamado de clases
        ValidacionesGenerales vg = new ValidacionesGenerales();
        ValidacionesIndividual vi = new ValidacionesIndividual();

        //Obtener datos de los campos de textos
        String cedula = (String) txt_buscar.getSelectedItem();
        String nombre = txt_nombre.getText().trim();
        String apellido = txt_apellido.getText().trim();
        String nombreUsuario = txt_usuario.getText().trim();
        String contraseña = txt_contraseña.getText().trim();
        String contraseñaConfirmar = txt_confirmar_contraseña.getText().trim();
        String tipo_usuario = (String) cmb_tipo_usuario.getSelectedItem();
        String estado_usuario = (String) cmb_estado_usuario.getSelectedItem();

        //Arreglos para validar los datos
        String[] camposT = {cedula, nombre, apellido, nombreUsuario, contraseña, contraseñaConfirmar};
        String[] camposL = {nombre, apellido};
        String[] camposN = {cedula};
        String[] camposA = {contraseña, contraseñaConfirmar, nombreUsuario};

        //Consultas
        String comprobacion = "SELECT cedula FROM usuarios_sistema "
                + "WHERE nombre_usuario ='" + cedula + "'";
        String modificar = "UPDATE usuarios_sistema SET cedula=?, nombre=?, apellido"
                + "=?, nombre_usuario=?, contraseña=?, permiso=?, estado=?"
                + " WHERE nombre_usuario='" + cedula + "'";

        //Validacion de campos vacios
        if (vg.camposVaciosArray(camposT)) {

            //Confirmacion de contraseña
            if (contraseña.equals(contraseñaConfirmar)) {

                //Validacion de los diferentes caracteres de los campos
                if (!vg.validarLetras(camposL)) {
                    JOptionPane.showMessageDialog(null, "Los campos (nombre, apellido, nombreUsuario) solo deben contener letras...");
                } else if (!vg.validarNumerosC(camposN)) {
                    JOptionPane.showMessageDialog(null, "El campo (Cedula) solo deben contener Numeros...");
                } else if (!vg.validarTodos(camposA)) {
                    JOptionPane.showMessageDialog(null, "Los campos (contraseña, contraseñaConfirmar) no debe contener caracters especiales...");
                } else {

                    //Modificar usuario
                    try {
                        Connection cn2 = Conexion_sql.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(modificar);

                        pst2.setString(1, cedula);
                        pst2.setString(2, nombre);
                        pst2.setString(3, apellido);
                        pst2.setString(4, nombreUsuario);
                        pst2.setString(5, contraseña);
                        pst2.setString(6, tipo_usuario);
                        pst2.setString(7, estado_usuario);
                        pst2.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Usuario Modificado");

                        cn2.close();

                        if (tipo.equals("Administrador")) {
                            dispose();
                            Administrador menu = new Administrador();
                            menu.setVisible(true);

                        } else if (tipo.equals("Tecnico")) {
                            dispose();
                            Tecnico menu = new Tecnico();
                            menu.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Error del servidor");
                        }

//                        
                    } catch (Exception e) {
                        System.err.println(e);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "La contraseñas no coinciden....");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Hay campos vacios...");
        }


    }//GEN-LAST:event_b_usuario_actualizarMouseClicked

    private void txt_contraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_contraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_contraseñaActionPerformed

    private void txt_confirmar_contraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_confirmar_contraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_confirmar_contraseñaActionPerformed

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        //

        String cedula_nombre_usuario = (String) txt_buscar.getSelectedItem();

        if (cedula_nombre_usuario.equals("-------")) {

            txt_buscar.setSelectedItem("-------");
            txt_nombre.setText("");
            txt_apellido.setText("");
            txt_usuario.setText("");
            txt_contraseña.setText("");
            cmb_tipo_usuario.setSelectedItem("-------");
            cmb_estado_usuario.setSelectedItem("-------");
            txt_confirmar_contraseña.setText("");

        } else {

            try {
                Connection cn = Conexion_sql.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "SELECT `cedula`, `nombre`, `apellido`, `nombre_usuario`,"
                        + " `contraseña`, `permiso`, `estado`"
                        + " FROM `bd_porcinos`.`usuarios_sistema`WHERE nombre_usuario='" + cedula_nombre_usuario + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    String cedula = rs.getString("cedula");
                    String nombre = rs.getString("nombre");
                    String apellido = rs.getString("apellido");
                    String nombreUsuario = rs.getString("nombre_usuario");
                    String contraseña = rs.getString("contraseña");
                    String tipo_usuario = (String) rs.getString("permiso");
                    String estado_usuario = rs.getString("estado");

                    txt_buscar.setSelectedItem(cedula);
                    txt_nombre.setText(nombre);
                    txt_apellido.setText(apellido);
                    txt_usuario.setText(nombreUsuario);
                    txt_contraseña.setText(contraseña);
                    cmb_tipo_usuario.setSelectedItem(tipo_usuario);
                    cmb_estado_usuario.setSelectedItem(estado_usuario);

                } else {
                    JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");

                }
                cn.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }
        }


    }//GEN-LAST:event_txt_buscarActionPerformed

    private void b_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseClicked
        String busqueda = txt_buscar.getSelectedItem().toString();

        //Consultas
        String eliminar = "DELETE FROM `usuarios_sistema` WHERE `nombre_usuario`='" + busqueda + "'";

        //Validacion de campos vacios
        if (!busqueda.equals("------")) {

            String clave = JOptionPane.showInputDialog("Introduce contraseña");

            if (clave.equals("EMSPA-01")) {

                int elimina = JOptionPane.showConfirmDialog(rootPane, "seguro que deeas eliminar el ususrio");

                if (elimina == 0) {

                    //Eliminar usuario
                    try {
                        Connection cn2 = Conexion_sql.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(eliminar);
                        pst2.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Usuario Eliminado");

                        cn2.close();

                        if (tipo.equals("Administrador")) {
                            dispose();
                            Administrador menu = new Administrador();
                            menu.setVisible(true);

                        } else if (tipo.equals("Tecnico")) {
                            dispose();
                            Tecnico menu = new Tecnico();
                            menu.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Error del servidor");
                        }
                    } catch (Exception e) {
                        System.err.println(e);
                    }

                } else if (elimina == 1) {
                    JOptionPane.showMessageDialog(null, "Operacion Abortada...");

                } else if (elimina == 2) {
                    JOptionPane.showMessageDialog(null, "Se cancelo la accion...");

                    if (tipo.equals("Administrador")) {
                        dispose();
                        Administrador menu = new Administrador();
                        menu.setVisible(true);

                    } else if (tipo.equals("Tecnico")) {
                        dispose();
                        Tecnico menu = new Tecnico();
                        menu.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Error del servidor");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Clave incorrecta");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debes de seleccionar el usuario en el buscdor...");
        }

    }//GEN-LAST:event_b_eliminarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modificar_usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modificar_usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modificar_usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modificar_usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modificar_usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel b_eliminar;
    private javax.swing.JLabel b_usuario_actualizar;
    private javax.swing.JLabel barra_mover4;
    private javax.swing.JComboBox<String> cmb_estado_usuario;
    private javax.swing.JComboBox<String> cmb_tipo_usuario;
    private javax.swing.JLabel i_usuario_actualizar;
    private javax.swing.JLabel icon_eliminar_modificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private prueba_diseño.PanelRound p_modificar_usuario_b_actualizar;
    private prueba_diseño.PanelRound p_modificar_usuario_b_eliminar;
    private prueba_diseño.PanelRound p_rgistro_usuario_apellio;
    private prueba_diseño.PanelRound p_rgistro_usuario_confirmar_conraseña;
    private prueba_diseño.PanelRound p_rgistro_usuario_contraseña;
    private prueba_diseño.PanelRound p_rgistro_usuario_nombre;
    private prueba_diseño.PanelRound p_rgistro_usuario_nombre_usuario;
    private prueba_diseño.PanelRound panelRound8;
    private prueba_diseño.PanelRound panelRound9;
    private javax.swing.JLabel salir;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JComboBox<String> txt_buscar;
    private javax.swing.JPasswordField txt_confirmar_contraseña;
    private javax.swing.JPasswordField txt_contraseña;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
