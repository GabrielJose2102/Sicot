package interfaces;

import clase_base_datos.Conexion_sql;
import static interfaces.Crear_usuario.tipo;
import static interfaces.Listar_Usuarios.IDusuario_update;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Listar_articulos extends javax.swing.JFrame {

    //Variables para obtener posicion(x,y) de la ventana en la pantalla
    int mouseX, mouseY;

    public static String IDarticulo_update = "";

    DefaultTableModel articulos = new DefaultTableModel();

    int num_articulos = 0;

    public Listar_articulos() {
        initComponents();
        setTitle("Listado de articulos");
        setResizable(false);
        setLocationRelativeTo(null);
        setSize(1000, 790);

        scrol_articulos.setVisible(true);

        /*Llenado de Tabla Usuarios de sistema*/
        try {
            Connection cn2 = Conexion_sql.conectar();
            PreparedStatement pst2 = cn2.prepareStatement(
                    "SELECT a.codigo_articulo, a.nombre_articulo, e.marca,"
                    + " e.fecha_entrada, e.fecha_salida, e.estado_articulo, a.tipo_articulo,"
                    + " e.registrado_por FROM articulos a"
                    + " INNER JOIN existencias e ON a.codigo_articulo=e.articulo"
                    + " ORDER BY nombre_articulo ASC");
            ResultSet rs2 = pst2.executeQuery();

            tabla_articulos = new JTable(articulos);
            scrol_articulos.setViewportView(tabla_articulos);

            articulos.addColumn("Codigo");
            articulos.addColumn("Nombre Artic");
            articulos.addColumn("Marca");
            articulos.addColumn("Fecha Ent");
            articulos.addColumn("Fecha Sal");
            articulos.addColumn("Estado");
            articulos.addColumn("Tipo Artic");
            articulos.addColumn("Registrdo por");

            while (rs2.next()) {
                Object[] filas = new Object[8];

                for (int i = 0; i < 8; i++) {
                    filas[i] = rs2.getObject(i + 1);
                }
                num_articulos++;
                articulos.addRow(filas);
            }
            cn2.close();

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
        }

        ObtenerDatosTablaS();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelRound5 = new prueba_diseño.PanelRound();
        panelRound8 = new prueba_diseño.PanelRound();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        barra_mover4 = new javax.swing.JLabel();
        panelRound1 = new prueba_diseño.PanelRound();
        scrol_articulos = new javax.swing.JScrollPane();
        tabla_articulos = new javax.swing.JTable();
        e_estado_articulo = new javax.swing.JLabel();
        cmb_orden = new javax.swing.JComboBox<>();
        e_tipo_reporte = new javax.swing.JLabel();
        e_tipo_reporte2 = new javax.swing.JLabel();
        btn_fecha = new javax.swing.JButton();
        annoD = new javax.swing.JComboBox<>();
        diaD = new javax.swing.JComboBox<>();
        mesD = new javax.swing.JComboBox<>();
        diaH = new javax.swing.JComboBox<>();
        mesH = new javax.swing.JComboBox<>();
        annoH = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        mes = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmb_tiempo = new javax.swing.JComboBox<>();
        e_estado_articulo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound8.setBackground(new java.awt.Color(36, 22, 74));
        panelRound8.setRoundBottomLeft(50);
        panelRound8.setRoundBottomRight(50);
        panelRound8.setRoundTopLeft(50);
        panelRound8.setRoundTopRight(50);
        panelRound8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_menuA/cerdo.png"))); // NOI18N
        panelRound8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 100));

        jLabel2.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Listar Artículos");
        panelRound8.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 270, 100));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_login/tarjeta-de-direccion (1).png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        panelRound8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 80, 60));

        panelRound5.add(panelRound8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 800, 100));

        barra_mover4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barra_mover4MouseDragged(evt);
            }
        });
        barra_mover4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barra_mover4MousePressed(evt);
            }
        });
        panelRound5.add(barra_mover4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 20));

        jPanel1.add(panelRound5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 130));

        panelRound1.setBackground(new java.awt.Color(255, 255, 255));
        panelRound1.setRoundBottomLeft(50);
        panelRound1.setRoundBottomRight(50);
        panelRound1.setRoundTopLeft(50);
        panelRound1.setRoundTopRight(50);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_articulos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabla_articulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre Articulo", "Marca", "Fecha Entrada", "Fecha Salida", "Estado ", "Tipo de Articulo", "Ingresado Por"
            }
        ));
        scrol_articulos.setViewportView(tabla_articulos);

        panelRound1.add(scrol_articulos, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, 700, 450));

        jPanel1.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 170, 750, 500));

        e_estado_articulo.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        e_estado_articulo.setForeground(new java.awt.Color(255, 255, 255));
        e_estado_articulo.setText("Ordenar por");
        jPanel1.add(e_estado_articulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 170, 200, -1));

        cmb_orden.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        cmb_orden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------", "Nombre", "Fecha Entrada", "Fecha Salida", "Estado" }));
        cmb_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_ordenActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_orden, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 200, 180, 40));

        e_tipo_reporte.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        e_tipo_reporte.setForeground(new java.awt.Color(255, 255, 255));
        e_tipo_reporte.setText("Hasta:");
        jPanel1.add(e_tipo_reporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 530, 70, -1));

        e_tipo_reporte2.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        e_tipo_reporte2.setForeground(new java.awt.Color(255, 255, 255));
        e_tipo_reporte2.setText("Desde:");
        jPanel1.add(e_tipo_reporte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 400, 70, -1));

        btn_fecha.setBackground(new java.awt.Color(38, 22, 74));
        btn_fecha.setForeground(new java.awt.Color(255, 255, 255));
        btn_fecha.setText("Filtrar por Fecha");
        btn_fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fechaActionPerformed(evt);
            }
        });
        jPanel1.add(btn_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 660, 160, 30));

        annoD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));
        jPanel1.add(annoD, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 460, 70, 30));

        diaD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jPanel1.add(diaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 460, 50, 30));

        mesD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jPanel1.add(mesD, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 460, 50, 30));

        diaH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jPanel1.add(diaH, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 590, 50, 30));

        mesH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jPanel1.add(mesH, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 590, 50, 30));

        annoH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-------", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));
        jPanel1.add(annoH, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 590, 70, 30));

        jLabel3.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("año");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 440, -1, -1));

        jLabel4.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("dia");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 440, -1, -1));

        jLabel5.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("mes");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 440, -1, -1));

        jLabel6.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("dia");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 570, -1, -1));

        mes.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        mes.setForeground(new java.awt.Color(255, 255, 255));
        mes.setText("mes");
        jPanel1.add(mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 570, -1, -1));

        jLabel8.setFont(new java.awt.Font("Serif", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("año");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 570, -1, -1));

        cmb_tiempo.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        cmb_tiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiempo de Almacen", "Tiempo de Uso" }));
        cmb_tiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tiempoActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_tiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 300, 180, 40));

        e_estado_articulo1.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        e_estado_articulo1.setForeground(new java.awt.Color(255, 255, 255));
        e_estado_articulo1.setText("Revisar por");
        jPanel1.add(e_estado_articulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 270, 200, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        //Boton
        //Salir de la interface
        if (tipo.equals("Administrador")) {
            dispose();
            Administrador menu = new Administrador();
            menu.setVisible(true);

        } else if (tipo.equals("Tecnico")) {
            dispose();
            Tecnico menu = new Tecnico();
            menu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Error del servidor");
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void barra_mover4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MouseDragged
        //Obtener posicion x,y de la interfaz al arrastrar con el mouse
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //Posicionar la ventana segun los valores obtenidos
        this.setLocation(x - mouseX, y - mouseY);
    }//GEN-LAST:event_barra_mover4MouseDragged

    private void barra_mover4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MousePressed
        //Obtener posiciones x,y del mouse cuando se mantiene presionado
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_barra_mover4MousePressed

    private void cmb_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_ordenActionPerformed
        if (cmb_orden.getSelectedIndex() == 0) {

            diaD.setSelectedIndex(0);
            mesD.setSelectedIndex(0);
            annoD.setSelectedIndex(0);

            diaH.setSelectedIndex(0);
            mesH.setSelectedIndex(0);
            annoH.setSelectedIndex(0);

        } else if (cmb_orden.getSelectedIndex() == 1) {

            diaD.setSelectedIndex(0);
            mesD.setSelectedIndex(0);
            annoD.setSelectedIndex(0);

            diaH.setSelectedIndex(0);
            mesH.setSelectedIndex(0);
            annoH.setSelectedIndex(0);

            articulos.setRowCount(0);
            articulos.setColumnCount(0);

            /*Llenado de Tabla Usuarios de sistema*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT a.codigo_articulo, a.nombre_articulo, e.marca,"
                        + " e.fecha_entrada, e.fecha_salida, e.estado_articulo, a.tipo_articulo,"
                        + " e.registrado_por FROM articulos a"
                        + " INNER JOIN existencias e ON a.codigo_articulo=e.articulo"
                        + " ORDER BY nombre_articulo  ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Fecha Ent");
                articulos.addColumn("Fecha Sal");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else if (cmb_orden.getSelectedIndex() == 2) {

            diaD.setSelectedIndex(0);
            mesD.setSelectedIndex(0);
            annoD.setSelectedIndex(0);

            diaH.setSelectedIndex(0);
            mesH.setSelectedIndex(0);
            annoH.setSelectedIndex(0);

            articulos.setRowCount(0);
            articulos.setColumnCount(0);

            /*Llenado de Tabla Usuarios de sistema*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT a.codigo_articulo, a.nombre_articulo, e.marca,"
                        + " e.fecha_entrada, e.fecha_salida, e.estado_articulo, a.tipo_articulo,"
                        + " e.registrado_por FROM articulos a"
                        + " INNER JOIN existencias e ON a.codigo_articulo=e.articulo"
                        + " ORDER BY fecha_entrada  ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Fecha Ent");
                articulos.addColumn("Fecha Sal");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else if (cmb_orden.getSelectedIndex() == 3) {

            diaD.setSelectedIndex(0);
            mesD.setSelectedIndex(0);
            annoD.setSelectedIndex(0);

            diaH.setSelectedIndex(0);
            mesH.setSelectedIndex(0);
            annoH.setSelectedIndex(0);

            articulos.setRowCount(0);
            articulos.setColumnCount(0);

            /*Llenado de Tabla Usuarios de sistema*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT a.codigo_articulo, a.nombre_articulo, e.marca,"
                        + " e.fecha_entrada, e.fecha_salida, e.estado_articulo, a.tipo_articulo,"
                        + " e.registrado_por FROM articulos a"
                        + " INNER JOIN existencias e ON a.codigo_articulo=e.articulo"
                        + " ORDER BY fecha_salida  ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Fecha Ent");
                articulos.addColumn("Fecha Sal");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else if (cmb_orden.getSelectedIndex() == 4) {

            diaD.setSelectedIndex(0);
            mesD.setSelectedIndex(0);
            annoD.setSelectedIndex(0);

            diaH.setSelectedIndex(0);
            mesH.setSelectedIndex(0);
            annoH.setSelectedIndex(0);

            articulos.setRowCount(0);
            articulos.setColumnCount(0);

            /*Llenado de Tabla Usuarios de sistema*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT a.codigo_articulo, a.nombre_articulo, e.marca,"
                        + " e.fecha_entrada, e.fecha_salida, e.estado_articulo, a.tipo_articulo,"
                        + " e.registrado_por FROM articulos a"
                        + " INNER JOIN existencias e ON a.codigo_articulo=e.articulo"
                        + " ORDER BY estado_articulo  ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Fecha Ent");
                articulos.addColumn("Fecha Sal");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else {

        }

    }//GEN-LAST:event_cmb_ordenActionPerformed

    private void btn_fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fechaActionPerformed

        //SELECT a.codigo_articulo, a.nombre_articulo, a.tipo_articulo, s.marca, s.estado_articulo, s.fecha_entrada, s.fecha_salida, s.registrado_por FROM articulos a JOIN existencias s ON a.codigo_articulo = s.articulo WHERE a.iniciado BETWEEN '2023-01-25' AND '2024-01-21' ORDER BY a.iniciado ASC
        //SELECT a.codigo_articulo, a.nombre_articulo, a.tipo_articulo, s.marca, s.estado_articulo, s.fecha_entrada, s.fecha_salida, s.registrado_por FROM articulos a JOIN existencias s ON a.codigo_articulo = s.articulo WHERE s.fecha_entrada BETWEEN '2023-01-25' AND '2024-01-21' ORDER BY s.fecha_entrada ASC
        String desde = annoD.getSelectedItem() + "-" + mesD.getSelectedItem() + "-" + diaD.getSelectedItem();
        String hasta = annoH.getSelectedItem() + "-" + mesH.getSelectedItem() + "-" + diaH.getSelectedItem();
        int tiempo = cmb_tiempo.getSelectedIndex();

        articulos.setRowCount(0);
        articulos.setColumnCount(0);

        /*Llenado de Tabla Usuarios de sistema*/
        String consulta_existencia = "SELECT a.codigo_articulo, a.nombre_articulo, s.marca, s.fecha_entrada, s.fecha_salida, "
                + " s.estado_articulo, a.tipo_articulo, s.registrado_por "
                + "FROM articulos a JOIN existencias s ON a.codigo_articulo = s.articulo "
                + "WHERE s.fecha_entrada BETWEEN '" + desde + "' AND '" + hasta + "'"
                + "ORDER BY s.fecha_entrada ASC";

        String consulta_articulo = "SELECT a.codigo_articulo, a.nombre_articulo, s.marca, a.iniciado, a.finalizado, "
                + " s.estado_articulo, a.tipo_articulo, s.registrado_por "
                + "FROM articulos a JOIN existencias s ON a.codigo_articulo = s.articulo "
                + "WHERE a.iniciado BETWEEN '" + desde + "' AND '" + hasta + "'"
                + "ORDER BY a.iniciado ASC";

        if (tiempo == 0) {

            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(consulta_existencia);
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Fecha Ent");
                articulos.addColumn("Fecha Sal");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }
        } else {

            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(consulta_articulo);
                ResultSet rs2 = pst2.executeQuery();

                tabla_articulos = new JTable(articulos);
                scrol_articulos.setViewportView(tabla_articulos);

                articulos.addColumn("Codigo");
                articulos.addColumn("Nombre Artic");
                articulos.addColumn("Marca");
                articulos.addColumn("Inicio");
                articulos.addColumn("Finalizado");
                articulos.addColumn("Estado");
                articulos.addColumn("Tipo Artic");
                articulos.addColumn("Registrdo por");

                while (rs2.next()) {
                    Object[] filas = new Object[8];

                    for (int i = 0; i < 8; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_articulos++;
                    articulos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }
        }


    }//GEN-LAST:event_btn_fechaActionPerformed

    private void cmb_tiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_tiempoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listar_articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listar_articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listar_articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listar_articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Listar_articulos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> annoD;
    private javax.swing.JComboBox<String> annoH;
    private javax.swing.JLabel barra_mover4;
    private javax.swing.JButton btn_fecha;
    private javax.swing.JComboBox<String> cmb_orden;
    private javax.swing.JComboBox<String> cmb_tiempo;
    private javax.swing.JComboBox<String> diaD;
    private javax.swing.JComboBox<String> diaH;
    private javax.swing.JLabel e_estado_articulo;
    private javax.swing.JLabel e_estado_articulo1;
    private javax.swing.JLabel e_tipo_reporte;
    private javax.swing.JLabel e_tipo_reporte2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mes;
    private javax.swing.JComboBox<String> mesD;
    private javax.swing.JComboBox<String> mesH;
    private prueba_diseño.PanelRound panelRound1;
    private prueba_diseño.PanelRound panelRound5;
    private prueba_diseño.PanelRound panelRound8;
    private javax.swing.JScrollPane scrol_articulos;
    private javax.swing.JTable tabla_articulos;
    // End of variables declaration//GEN-END:variables

    public void ObtenerDatosTablaS() {
        tabla_articulos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = tabla_articulos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDarticulo_update = (String) articulos.getValueAt(fila_point, columna_point);
                    Modificar_articulos info = new Modificar_articulos();
                    info.setVisible(true);
                    dispose();
                }
            }
        });
    }

}
