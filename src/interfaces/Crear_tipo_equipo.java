/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clase_base_datos.Conexion_sql;
import funcionabilidad.ValidacionesGenerales;
import funcionabilidad.ValidacionesIndividual;
import static interfaces.Crear_usuario.tipo;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author s.martinez
 */
public class Crear_tipo_equipo extends javax.swing.JFrame {

    //Variables para obtener posicion(x,y) de la ventana en la pantalla
    int mouseX, mouseY;

    public Crear_tipo_equipo() {
        initComponents();
        setSize(500, 530);
        setTitle("Tipos Equipos");
        setLocationRelativeTo(null);
        setResizable(false);
        
        
        try {
            Connection cn = Conexion_sql.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT nombre_tipo_equipo FROM `tipo_equipo`");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                cmb_codigo.addItem(rs.getString("nombre_tipo_equipo"));

            }
            cn.close();

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound2 = new prueba_diseño.PanelRound();
        jLabel9 = new javax.swing.JLabel();
        panelRound8 = new prueba_diseño.PanelRound();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelRound1 = new prueba_diseño.PanelRound();
        jLabel12 = new javax.swing.JLabel();
        p_rgistro_tipo_equipo_nombre_equipo = new prueba_diseño.PanelRound();
        txt_nombre = new javax.swing.JTextField();
        p_registro_tipo_equipo_b_registrar = new prueba_diseño.PanelRound();
        b_registrar = new javax.swing.JLabel();
        p_registro_tipo_equipo_b_eliminar = new prueba_diseño.PanelRound();
        b_eliminar = new javax.swing.JLabel();
        barra_mover4 = new javax.swing.JLabel();
        cmb_codigo = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(36, 22, 74));
        panelRound2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nombre");
        panelRound2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 160, -1));

        panelRound8.setBackground(new java.awt.Color(0, 102, 102));
        panelRound8.setRoundBottomLeft(50);
        panelRound8.setRoundBottomRight(50);
        panelRound8.setRoundTopLeft(50);
        panelRound8.setRoundTopRight(50);
        panelRound8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_menuA/cerdo.png"))); // NOI18N
        panelRound8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 90, 90));

        jLabel2.setFont(new java.awt.Font("Serif", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Registrar Tipo de Equipo");
        panelRound8.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 220, 70));

        panelRound1.setBackground(new java.awt.Color(0, 102, 102));
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_login/tarjeta-de-direccion (1).png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        panelRound1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        panelRound8.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 50, 40));

        panelRound2.add(panelRound8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 450, 80));

        p_rgistro_tipo_equipo_nombre_equipo.setRoundBottomLeft(50);
        p_rgistro_tipo_equipo_nombre_equipo.setRoundBottomRight(50);
        p_rgistro_tipo_equipo_nombre_equipo.setRoundTopLeft(50);
        p_rgistro_tipo_equipo_nombre_equipo.setRoundTopRight(50);
        p_rgistro_tipo_equipo_nombre_equipo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nombre.setBackground(new java.awt.Color(218, 215, 220));
        txt_nombre.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(null);
        p_rgistro_tipo_equipo_nombre_equipo.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 5, 220, 40));

        panelRound2.add(p_rgistro_tipo_equipo_nombre_equipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 250, 50));

        p_registro_tipo_equipo_b_registrar.setBackground(new java.awt.Color(0, 102, 102));
        p_registro_tipo_equipo_b_registrar.setRoundBottomLeft(50);
        p_registro_tipo_equipo_b_registrar.setRoundBottomRight(50);
        p_registro_tipo_equipo_b_registrar.setRoundTopLeft(50);
        p_registro_tipo_equipo_b_registrar.setRoundTopRight(50);
        p_registro_tipo_equipo_b_registrar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b_registrar.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        b_registrar.setForeground(new java.awt.Color(255, 255, 255));
        b_registrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_registrar.setText("Registrar");
        b_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_registrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_registrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_registrarMouseExited(evt);
            }
        });
        p_registro_tipo_equipo_b_registrar.add(b_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));

        panelRound2.add(p_registro_tipo_equipo_b_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 180, 50));

        p_registro_tipo_equipo_b_eliminar.setBackground(new java.awt.Color(0, 102, 102));
        p_registro_tipo_equipo_b_eliminar.setRoundBottomLeft(50);
        p_registro_tipo_equipo_b_eliminar.setRoundBottomRight(50);
        p_registro_tipo_equipo_b_eliminar.setRoundTopLeft(50);
        p_registro_tipo_equipo_b_eliminar.setRoundTopRight(50);
        p_registro_tipo_equipo_b_eliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        b_eliminar.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        b_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        b_eliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_eliminar.setText("Eliminar");
        b_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_eliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                b_eliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                b_eliminarMouseExited(evt);
            }
        });
        p_registro_tipo_equipo_b_eliminar.add(b_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));

        panelRound2.add(p_registro_tipo_equipo_b_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 180, 50));

        barra_mover4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barra_mover4MouseDragged(evt);
            }
        });
        barra_mover4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barra_mover4MousePressed(evt);
            }
        });
        panelRound2.add(barra_mover4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 20));

        cmb_codigo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------" }));
        cmb_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_codigoActionPerformed(evt);
            }
        });
        panelRound2.add(cmb_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 210, 40));

        jLabel34.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Selecciona para eliminar");
        panelRound2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 260, -1));

        getContentPane().add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        //
        if (tipo.equals("Administrador")) {
            dispose();
            Administrador menu = new Administrador();
            menu.setVisible(true);

        } else if (tipo.equals("Tecnico")) {
            dispose();
            Tecnico menu = new Tecnico();
            menu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Error del servidor");
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void barra_mover4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MouseDragged
        //Obtener posicion x,y de la interfaz al arrastrar con el mouse
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //Posicionar la ventana segun los valores obtenidos
        this.setLocation(x - mouseX, y - mouseY);
    }//GEN-LAST:event_barra_mover4MouseDragged

    private void barra_mover4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MousePressed
        //Obtener posiciones x,y del mouse cuando se mantiene presionado
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_barra_mover4MousePressed

    private void b_registrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_registrarMouseEntered
        // Cambiar el color al hacer focus en el boton "ACTUALIZAR", del modulo
        //"MODIFICAR USUARIO"
        p_registro_tipo_equipo_b_registrar.setBackground(new Color(2, 86, 105));
    }//GEN-LAST:event_b_registrarMouseEntered

    private void b_registrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_registrarMouseExited
        // volver al color original, al no tener el focus en el boton "Actualizar", del modulo
        //"MODIFICAR USUARIO"
        p_registro_tipo_equipo_b_registrar.setBackground(new Color(0, 102, 99));
    }//GEN-LAST:event_b_registrarMouseExited

    private void b_eliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseEntered
        // Cambiar el color al hacer focus en el boton "ACTUALIZAR", del modulo
        //"MODIFICAR USUARIO"
        p_registro_tipo_equipo_b_eliminar.setBackground(new Color(164, 48, 48));
    }//GEN-LAST:event_b_eliminarMouseEntered

    private void b_eliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseExited
        // volver al color original, al no tener el focus en el boton "Actualizar", del modulo
        //"MODIFICAR USUARIO"
        p_registro_tipo_equipo_b_eliminar.setBackground(new Color(0, 102, 99));
    }//GEN-LAST:event_b_eliminarMouseExited

    private void b_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_registrarMouseClicked
        //Registrar Nuevos tipos de equipos

        //Llamado de clases
        ValidacionesGenerales vg = new ValidacionesGenerales();

        //Obtener datos de los campos de textos
        String nombre = txt_nombre.getText().trim();

        //Arreglos para validar los datos
        String[] camposT = {nombre};

        //Consultas
        String comprobacion = "SELECT nombre_tipo_equipo FROM tipo_equipo "
                + "WHERE nombre_tipo_equipo ='" + nombre + "'";
        String agregar = "INSERT INTO tipo_equipo values (?,?)";

        //Validacion de campos vacios
        if (vg.camposVaciosArray(camposT)) {

            //Validacion de los diferentes caracteres de los campos
            if (!vg.validarLetras(camposT)) {
                JOptionPane.showMessageDialog(null, "El campos (nombre) solo debe contener letras...");
            } else {

                //Verificaion de ecistencia de articulo
                try {
                    Connection cn = Conexion_sql.conectar();
                    PreparedStatement pst = cn.prepareStatement(comprobacion);
                    ResultSet rs = pst.executeQuery();

                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "tipo existente....");
                    } else if (!rs.next()) {

                        //Registrar usuario
                        try {
                            Connection cn2 = Conexion_sql.conectar();
                            PreparedStatement pst2 = cn2.prepareStatement(agregar);

                            pst2.setString(1, null);
                            pst2.setString(2, nombre);
                            pst2.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Tipo de equipo Registrado con exito...");

                            if (tipo.equals("Administrador")) {
                                dispose();
                                Administrador menu = new Administrador();
                                menu.setVisible(true);
                                cn2.close();
                                cn.close();

                            } else if (tipo.equals("Tecnico")) {
                                dispose();
                                Tecnico menu = new Tecnico();
                                menu.setVisible(true);
                                cn2.close();
                                cn.close();
                            } else {
                                JOptionPane.showMessageDialog(null, "Error del servidor");
                            }

                        } catch (Exception e2) {
                            System.err.println(e2);
                            JOptionPane.showMessageDialog(null, "Error al Crear tipo de equipo...");
                        }

                    }
                } catch (Exception e1) {

                    System.err.println(e1);
                    JOptionPane.showMessageDialog(null, "Error al verificar tipo de equipo");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Hay campos vacios...");
        }
    }//GEN-LAST:event_b_registrarMouseClicked

    private void cmb_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_codigoActionPerformed
        
        String codigo = (String) cmb_codigo.getSelectedItem();

        if (codigo.equals("------")) {
            txt_nombre.setText("");
        } else {
            txt_nombre.setText(codigo);
        }
    }//GEN-LAST:event_cmb_codigoActionPerformed

    private void b_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_eliminarMouseClicked
        //
        
        String nombre = cmb_codigo.getSelectedItem().toString();

        //Consultas
        String eliminar = "DELETE FROM `tipo_equipo` WHERE `tipo_equipo`.`nombre_tipo_equipo`= '" + nombre + "'";
        
        
        if (!nombre.equals("------")) {

            String clave = JOptionPane.showInputDialog("Introduce contraseña");

            if (clave.equals("EMSPA-01")) {

                int elimina = JOptionPane.showConfirmDialog(rootPane, "seguro que deeas eliminar el ususrio");

                if (elimina == 0) {

                    //Eliminar usuario
                    try {
                        Connection cn2 = Conexion_sql.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(eliminar);
                        pst2.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Usuario Eliminado");

                        cn2.close();

                        if (tipo.equals("Administrador")) {
                            dispose();
                            Administrador menu = new Administrador();
                            menu.setVisible(true);

                        } else if (tipo.equals("Tecnico")) {
                            dispose();
                            Tecnico menu = new Tecnico();
                            menu.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(null, "Error del servidor");
                        }
                    } catch (Exception e) {
                        System.err.println(e);
                    }

                } else if (elimina == 1) {
                    JOptionPane.showMessageDialog(null, "Operacion Abortada...");

                } else if (elimina == 2) {
                    JOptionPane.showMessageDialog(null, "Se cancelo la accion...");

                    if (tipo.equals("Administrador")) {
                        dispose();
                        Administrador menu = new Administrador();
                        menu.setVisible(true);

                    } else if (tipo.equals("Tecnico")) {
                        dispose();
                        Tecnico menu = new Tecnico();
                        menu.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Error del servidor");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Clave incorrecta");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debes de seleccionar el usuario en el buscdor...");
        }
    }//GEN-LAST:event_b_eliminarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crear_tipo_equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crear_tipo_equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crear_tipo_equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crear_tipo_equipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crear_tipo_equipo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel b_eliminar;
    private javax.swing.JLabel b_registrar;
    private javax.swing.JLabel barra_mover4;
    private javax.swing.JComboBox<String> cmb_codigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel9;
    private prueba_diseño.PanelRound p_registro_tipo_equipo_b_eliminar;
    private prueba_diseño.PanelRound p_registro_tipo_equipo_b_registrar;
    private prueba_diseño.PanelRound p_rgistro_tipo_equipo_nombre_equipo;
    private prueba_diseño.PanelRound panelRound1;
    private prueba_diseño.PanelRound panelRound2;
    private prueba_diseño.PanelRound panelRound8;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
