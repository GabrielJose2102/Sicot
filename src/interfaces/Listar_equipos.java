package interfaces;

import clase_base_datos.Conexion_sql;
import static interfaces.Crear_usuario.tipo;
import static interfaces.Listar_Usuarios.IDusuario_update;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Listar_equipos extends javax.swing.JFrame {

    //Variables para obtener posicion(x,y) de la ventana en la pantalla
    int mouseX, mouseY;

    public static String IDequipo_update = "";

    DefaultTableModel equipos = new DefaultTableModel();

    int num_equipos = 0;

    public Listar_equipos() {
        initComponents();
        setTitle("Listado de equipos");
        setResizable(false);
        setLocationRelativeTo(null);
        setSize(1100, 800);

        scrol_equipos.setVisible(true);


        /*Llenado de Tabla de equipos*/
        try {
            Connection cn2 = Conexion_sql.conectar();
            PreparedStatement pst2 = cn2.prepareStatement(
                    "SELECT `nombre_equipo`, `marca`, `sistema_operativo`,"
                    + " `ultima_modificacion`, `estado_equipo`, `registrado_por`,"
                    + " `departamento`, `usuario_equipo`, `tipo_equipo` FROM `bd_porcinos`.`equipos`"
                    + "ORDER BY nombre_equipo ASC");
            ResultSet rs2 = pst2.executeQuery();

            tabla_equipos = new JTable(equipos);
            scrol_equipos.setViewportView(tabla_equipos);

            equipos.addColumn("Equipo");
            equipos.addColumn("Marca");
            equipos.addColumn("Sistema. O");
            equipos.addColumn("Modificado");
            equipos.addColumn("Estado");
            equipos.addColumn("Registrado_por");
            equipos.addColumn("Departamento");
            equipos.addColumn("Usuario");
            equipos.addColumn("Tipo");

            while (rs2.next()) {
                Object[] filas = new Object[9];

                for (int i = 0; i < 9; i++) {
                    filas[i] = rs2.getObject(i + 1);
                }
                num_equipos++;
                equipos.addRow(filas);
            }
            cn2.close();

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
        }

        ObtenerDatosTablaS();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelRound5 = new prueba_diseño.PanelRound();
        panelRound8 = new prueba_diseño.PanelRound();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        barra_mover4 = new javax.swing.JLabel();
        panelRound2 = new prueba_diseño.PanelRound();
        scrol_equipos = new javax.swing.JScrollPane();
        tabla_equipos = new javax.swing.JTable();
        e_departamento = new javax.swing.JLabel();
        cmb_orden = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound8.setBackground(new java.awt.Color(36, 22, 74));
        panelRound8.setRoundBottomLeft(50);
        panelRound8.setRoundBottomRight(50);
        panelRound8.setRoundTopLeft(50);
        panelRound8.setRoundTopRight(50);
        panelRound8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_menuA/cerdo.png"))); // NOI18N
        panelRound8.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 100));

        jLabel2.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Listar Equipos");
        panelRound8.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 270, 100));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes_login/tarjeta-de-direccion (1).png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        panelRound8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 80, 60));

        panelRound5.add(panelRound8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 800, 100));

        barra_mover4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                barra_mover4MouseDragged(evt);
            }
        });
        barra_mover4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                barra_mover4MousePressed(evt);
            }
        });
        panelRound5.add(barra_mover4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 20));

        jPanel1.add(panelRound5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 130));

        panelRound2.setBackground(new java.awt.Color(255, 255, 255));
        panelRound2.setRoundBottomLeft(50);
        panelRound2.setRoundBottomRight(50);
        panelRound2.setRoundTopLeft(50);
        panelRound2.setRoundTopRight(50);
        panelRound2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_equipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre equipo", "Marca", "Sistema Operativo", "Ultima Modificacion", "Estado", "Registrado Por", "Departamento", "Usuario equipo", "Tipo equipo"
            }
        ));
        scrol_equipos.setViewportView(tabla_equipos);

        panelRound2.add(scrol_equipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 25, 800, 450));

        jPanel1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 170, 850, 500));

        e_departamento.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        e_departamento.setForeground(new java.awt.Color(255, 255, 255));
        e_departamento.setText("Ordenar por");
        jPanel1.add(e_departamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 380, 200, -1));

        cmb_orden.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        cmb_orden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------", "Nombre", "Estado", "Tipo de equipo", " ", " " }));
        cmb_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_ordenActionPerformed(evt);
            }
        });
        jPanel1.add(cmb_orden, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 410, 180, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        //Boton
        //Salir de la interface
        if (tipo.equals("Administrador")) {
            dispose();
            Administrador menu = new Administrador();
            menu.setVisible(true);

        } else if (tipo.equals("Tecnico")) {
            dispose();
            Tecnico menu = new Tecnico();
            menu.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Error del servidor");
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void barra_mover4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MouseDragged
        //Obtener posicion x,y de la interfaz al arrastrar con el mouse
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        //Posicionar la ventana segun los valores obtenidos
        this.setLocation(x - mouseX, y - mouseY);
    }//GEN-LAST:event_barra_mover4MouseDragged

    private void barra_mover4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barra_mover4MousePressed
        //Obtener posiciones x,y del mouse cuando se mantiene presionado
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_barra_mover4MousePressed

    private void cmb_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_ordenActionPerformed
        if (cmb_orden.getSelectedIndex() == 1) {

            equipos.setRowCount(0);
            equipos.setColumnCount(0);

            /*Llenado de Tabla de equipos*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT `nombre_equipo`, `marca`, `sistema_operativo`,"
                        + " `ultima_modificacion`, `estado_equipo`, `registrado_por`,"
                        + " `departamento`, `usuario_equipo`, `tipo_equipo` FROM `bd_porcinos`.`equipos`"
                        + "ORDER BY nombre_equipo ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_equipos = new JTable(equipos);
                scrol_equipos.setViewportView(tabla_equipos);

                equipos.addColumn("Equipo");
                equipos.addColumn("Marca");
                equipos.addColumn("Sistema. O");
                equipos.addColumn("Modificado");
                equipos.addColumn("Estado");
                equipos.addColumn("Registrado_por");
                equipos.addColumn("Departamento");
                equipos.addColumn("Usuario");
                equipos.addColumn("Tipo");

                while (rs2.next()) {
                    Object[] filas = new Object[9];

                    for (int i = 0; i < 9; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_equipos++;
                    equipos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else if (cmb_orden.getSelectedIndex() == 2) {

            equipos.setRowCount(0);
            equipos.setColumnCount(0);


            /*Llenado de Tabla de equipos*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT `nombre_equipo`, `marca`, `sistema_operativo`,"
                        + " `ultima_modificacion`, `estado_equipo`, `registrado_por`,"
                        + " `departamento`, `usuario_equipo`, `tipo_equipo` FROM `bd_porcinos`.`equipos`"
                        + "ORDER BY estado_equipo ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_equipos = new JTable(equipos);
                scrol_equipos.setViewportView(tabla_equipos);

                equipos.addColumn("Equipo");
                equipos.addColumn("Marca");
                equipos.addColumn("Sistema. O");
                equipos.addColumn("Modificado");
                equipos.addColumn("Estado");
                equipos.addColumn("Registrado_por");
                equipos.addColumn("Departamento");
                equipos.addColumn("Usuario");
                equipos.addColumn("Tipo");

                while (rs2.next()) {
                    Object[] filas = new Object[9];

                    for (int i = 0; i < 9; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_equipos++;
                    equipos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else if (cmb_orden.getSelectedIndex() == 3) {

            equipos.setRowCount(0);
            equipos.setColumnCount(0);

            /*Llenado de Tabla de equipos*/
            try {
                Connection cn2 = Conexion_sql.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                        "SELECT `nombre_equipo`, `marca`, `sistema_operativo`,"
                        + " `ultima_modificacion`, `estado_equipo`, `registrado_por`,"
                        + " `departamento`, `usuario_equipo`, `tipo_equipo` FROM `bd_porcinos`.`equipos`"
                        + "ORDER BY tipo_equipo ASC");
                ResultSet rs2 = pst2.executeQuery();

                tabla_equipos = new JTable(equipos);
                scrol_equipos.setViewportView(tabla_equipos);

                equipos.addColumn("Equipo");
                equipos.addColumn("Marca");
                equipos.addColumn("Sistema. O");
                equipos.addColumn("Modificado");
                equipos.addColumn("Estado");
                equipos.addColumn("Registrado_por");
                equipos.addColumn("Departamento");
                equipos.addColumn("Usuario");
                equipos.addColumn("Tipo");

                while (rs2.next()) {
                    Object[] filas = new Object[9];

                    for (int i = 0; i < 9; i++) {
                        filas[i] = rs2.getObject(i + 1);
                    }
                    num_equipos++;
                    equipos.addRow(filas);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println(e);
                JOptionPane.showMessageDialog(null, "Error al mostrar informacion Contactar al abministrador de la base de datos");
            }

        } else {

        }


    }//GEN-LAST:event_cmb_ordenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Listar_equipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barra_mover4;
    private javax.swing.JComboBox<String> cmb_orden;
    private javax.swing.JLabel e_departamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private prueba_diseño.PanelRound panelRound2;
    private prueba_diseño.PanelRound panelRound5;
    private prueba_diseño.PanelRound panelRound8;
    private javax.swing.JScrollPane scrol_equipos;
    private javax.swing.JTable tabla_equipos;
    // End of variables declaration//GEN-END:variables

    public void ObtenerDatosTablaS() {
        tabla_equipos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = tabla_equipos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDequipo_update = (String) equipos.getValueAt(fila_point, columna_point);
                    Modificar_equipo info = new Modificar_equipo();
                    info.setVisible(true);
                    dispose();
                }
            }
        });
    }

}
